# # workflow name.
# name: Deploy to render.

# # Run workflow on every push to master branch.
# on:
#   push:
#     branches: [master]

# # workflows jobs.
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       # Check-out repository.
#       - name: Checkout
#         uses: actions/checkout@v2


# ### ⬇ IMPORTANT PART ⬇ ###

#       - name: Build, Push and Release a Docker container to render. # custom step name
#         uses: gonuit/render-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
#         with:
#           # Below you must provide variables for your render app.

#           # The email address associated with your render account.
#           # If you don't want to use repository secrets (which is recommended) you can do:
#           # email: my.email@example.com
#           email: ${{ secrets.RENDER_EMAIL }}
          
#           # render API key associated with provided user's email.
#           # Api Key is available under your render account settings.
#           render_api_key: ${{ secrets.RENDER_API_KEY }}
          
#           # Name of the render application to which the build is to be sent.
#           render_app_name: ${{ secrets.RENDER_APP_NAME }}

#           # (Optional, default: "./")
#           # Dockerfile directory.
#           # For example, if you have a Dockerfile in the root of your project, leave it as follows:
#           dockerfile_directory: ./

#           # (Optional, default: "Dockerfile")
#           # Dockerfile name.
#           dockerfile_name: Dockerfile

#           # (Optional, default: "")
#           # Additional options of docker build command.
#           docker_options: "--no-cache"

#           # (Optional, default: "web")
#           # Select the process type for which you want the docker container to be uploaded.
#           # By default, this argument is set to "web".
#           process_type: web  
   
          
### ⬆ IMPORTANT PART ⬆ ###


name: Deploy to Render

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Docker
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Set your Python version

      # - name: Log In to Docker Hub
      #   run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t titanic_survivors:latest .  # Replace with your Docker image name

      # - name: Push Docker Image to Docker Hub
      #   run: docker push your-docker-image-name:latest  # Replace with your Docker image name

      - name: Deploy to Render
        uses: fcollman/render-deploy
        with:
          email: ${{ secrets.RENDER_EMAIL }}
          render_api_key: ${{ secrets.RENDER_API_KEY }}
          render_app_name: Titanic-Survivors # Replace with your Render app name
          dockerfile_directory: ./  # Path to your Dockerfile directory
          dockerfile_name: Dockerfile
